/**********************************************************************
 *
 *   Component generated by Quest
 *
 *   WARNING: By editing this component by hand, you will lose the ability to regenerate the code without conflicts.
 *   To preserve that ability, always export from Quest to regenerate this file.
 *   To setup element attributes and CSS properties, use the Quest web app
 *   Code Logic goes in the hook associated with this component
 *
 *   For help and further details refer to: https://www.quest.ai/docs
 *
 *
 **********************************************************************/

import React from 'react';
import { TextField, Button } from '@mui/material';
import { styled } from '@mui/material/styles';

const Property1Quest = styled('div')({
  backgroundColor: `rgba(255, 255, 255, 1)`,
  borderRadius: `0px`,
  display: `flex`,
  position: `relative`,
  isolation: `isolate`,
  flexDirection: `column`,
  width: '100%',
  justifyContent: `flex-start`,
  alignItems: `flex-start`,
  padding: `40px`,
  boxSizing: `border-box`,
  overflow: `hidden`,
  height: 'auto',
});

const ContactUs = styled('div')(({ theme }) => ({
  textAlign: `left`,
  whiteSpace: `pre-wrap`,
  fontSynthesis: `none`,
  color: `rgba(0, 0, 0, 1)`,
  fontStyle: theme.typography['Typography']['H4'].fontStyle,
  fontFamily: theme.typography['Typography']['H4'].fontFamily,
  fontWeight: theme.typography['Typography']['H4'].fontWeight,
  fontSize: theme.typography['Typography']['H4'].fontSize,
  letterSpacing: theme.typography['Typography']['H4'].letterSpacing,
  lineHeight: theme.typography['Typography']['H4'].lineHeight,
  textDecoration: theme.typography['Typography']['H4'].textDecoration,
  textTransform: theme.typography['Typography']['H4'].textTransform,
  margin: `0px`,
}));

const Frame3 = styled('div')({
  borderRadius: `0px`,
  display: `flex`,
  position: `relative`,
  isolation: `isolate`,
  flexDirection: `row`,
  justifyContent: `flex-start`,
  alignItems: `flex-start`,
  padding: `0px`,
  boxSizing: `border-box`,
  alignSelf: `stretch`,
  margin: `40px 0px 0px 0px`,
});

const Row1 = styled('div')({
  borderRadius: `0px`,
  display: `flex`,
  position: `relative`,
  isolation: `isolate`,
  flexDirection: `column`,
  justifyContent: `flex-start`,
  alignItems: `flex-start`,
  padding: `0px`,
  boxSizing: `border-box`,
  flex: `1`,
  margin: `0px`,
});

const TextFieldStandard = styled(TextField)({
  alignSelf: `stretch`,
  margin: `0px`,
});

const TextFieldStandard1 = styled(TextField)({
  alignSelf: `stretch`,
  margin: `40px 0px 0px 0px`,
});

const Row2 = styled('div')({
  borderRadius: `0px`,
  display: `flex`,
  position: `relative`,
  isolation: `isolate`,
  flexDirection: `column`,
  justifyContent: `flex-start`,
  alignItems: `flex-start`,
  padding: `0px`,
  boxSizing: `border-box`,
  flex: `1`,
  margin: `0px 0px 0px 40px`,
});

const TextFieldStandard2 = styled(TextField)({
  alignSelf: `stretch`,
  margin: `0px`,
});

const TextFieldStandard3 = styled(TextField)({
  alignSelf: `stretch`,
  margin: `40px 0px 0px 0px`,
});

const TextFieldStandard4 = styled(TextField)({
  alignSelf: `stretch`,
  margin: `40px 0px 0px 0px`,
});

const Btm = styled('div')({
  borderRadius: `0px`,
  display: `flex`,
  position: `relative`,
  isolation: `isolate`,
  flexDirection: `column`,
  justifyContent: `flex-start`,
  alignItems: `center`,
  padding: `0px`,
  boxSizing: `border-box`,
  alignSelf: `stretch`,
  margin: `40px 0px 0px 0px`,
});

const ButtonContained = styled(Button)({
  alignSelf: `stretch`,
  margin: `0px`,
});

function Form1(props) {
  return (
    props.open && (
      <Property1Quest className={props.className}>
        <ContactUs>{`Contact Us`}</ContactUs>
        <Frame3>
          <Row1>
            <TextFieldStandard
              variant="standard"
              size="small"
              label={`Full Name`}
              helperText="Helper text"
            />
            <TextFieldStandard1
              variant="standard"
              size="small"
              label={`Phone`}
              helperText="Helper text"
            />
          </Row1>
          <Row2>
            <TextFieldStandard2
              variant="standard"
              size="small"
              label={`Company`}
              helperText="Helper text"
            />
            <TextFieldStandard3
              variant="standard"
              size="small"
              label={`Email`}
              helperText="Helper text"
            />
          </Row2>
        </Frame3>
        <TextFieldStandard4
          variant="standard"
          size="small"
          label={`Comments`}
          helperText="Helper text"
        />
        <Btm>
          <ButtonContained
            variant="contained"
            size="large"
            color="primary"
            onClick={props.onClose}
          >
            {' '}
            Submit{' '}
          </ButtonContained>
        </Btm>
      </Property1Quest>
    )
  );
}

export default Form1;
