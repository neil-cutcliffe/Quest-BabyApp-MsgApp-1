/**********************************************************************
 *
 *   Component generated by Quest
 *
 *   WARNING: By editing this component by hand, you will lose the ability to regenerate the code without conflicts.
 *   To preserve that ability, always export from Quest to regenerate this file.
 *   To setup element attributes and CSS properties, use the Quest web app
 *   Code Logic goes in the hook associated with this component
 *
 *   For help and further details refer to: https://www.quest.ai/docs
 *
 *
 **********************************************************************/

import React from 'react';
import { styled } from '@mui/material/styles';
import Post from 'src/components/Post/Post';

const TypeQuest = styled('div')({
  backgroundColor: `rgba(255, 255, 255, 1)`,
  borderRadius: `0px`,
  display: `grid`,
  position: `relative`,
  isolation: `isolate`,
  width: `100%`,
  height: `auto`,
  padding: `0px`,
  boxSizing: `border-box`,
  overflow: `hidden`,
  gridTemplateColumns: `repeat(auto-fit, minmax(414px, 1fr))`,
  columnGap: `10px`,
  rowGap: `10px`,
});

const Post1 = styled(Post)(({ theme }) => ({
  width: `414px`,
  height: `700px`,
  position: `absolute`,
  left: `0px`,
  top: `-20px`,
}));

function MsgApp1(props) {
  return (
    <TypeQuest className={props.className}>
      {props.posts &&
        props.posts.map((my_post, index) => {
          return <Post1 key={index} post={props.posts[index]} />;
        })}
    </TypeQuest>
  );
}

export default MsgApp1;
